name: CI

on:
  pull_request:
  push:
    branches:
      - develop
      - master
      - 'release/*'
      - 'hotfix/*'
env:
  CI: true

jobs:
  fetch-dependencies:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
    - uses: actions/checkout@v2
    - uses: volta-cli/action@v1
    - name: fetch and cache npm dependencies
      id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: cached_node_modules_${{ hashFiles('**/yarn.lock') }}
        restore-keys: cached_node_modules_
    - if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: yarn --frozen-lockfile --ignore-engines
    # - name: fetch and cache bower dependencies
    #   id: cache-bower-dependencies
    #   uses: actions/cache@v2
    #   with:
    #     path: ./bower_components
    #     key: cached_bower_dependencies_${{ hashFiles('**/bower.json') }}
    #     restore-keys: cached_bower_dependencies_
    # - if: steps.cache-bower-dependencies.outputs.cache-hit != 'true'
    #   run: yarn bower install --config.interactive=false

  test-with-coverage:
    runs-on: ubuntu-latest
    needs: fetch-dependencies
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v2
    - uses: volta-cli/action@v1
    - id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: cached_node_modules_${{ hashFiles('**/yarn.lock') }}
        restore-keys: cached_node_modules_
    # - id: cache-bower-dependencies
    #   uses: actions/cache@v2
    #   with:
    #     path: ./bower_components
    #     key: cached_bower_components_${{ hashFiles('**/bower.json') }}
    #     restore-keys: cached_bower_components_

    - run: |
      yarn bower install --config.interactive=false
      yarn test:cover
    - name: Save code coverage artifact
      uses: actions/upload-artifact@v2
      with:
        name: coverage-info
        path: ./coverage/lcov.info

  send-coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: test-with-coverage
    steps:
    - uses: volta-cli/action@v1
    - uses: actions/download-artifact@v2
      with:
        name: coverage-info
        path: ./coverage/lcov.info
    # - uses: actions/cache@v2
    #   with:
    #     path: ./node_modules
    #     key: cached_node_modules_${{ hashFiles('**/yarn.lock') }}
    #     restore-keys: cached_node_modules_
    # - name: Generate coverage report
    #   env:
    #     COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
    #   run: yarn coveralls
    - name: Send coverage report to coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
